<?php

// Helper function to handle env() if it doesn't exist
if (!function_exists('env')) {
    function env($key, $default = null) {
        $value = getenv($key);
        
        if ($value === false) {
            return $default;
        }
        
        return $value;
    }
}

return [
    /*
    |--------------------------------------------------------------------------
    | Cachable Methods Enabled
    |--------------------------------------------------------------------------
    |
    | This option determines whether caching via attributes is enabled globally.
    | You can disable all attribute-based caching by setting this to false.
    |
    */
    'enabled' => env('CACHABLE_METHODS_ENABLED', true),

    /*
    |--------------------------------------------------------------------------
    | Default Cache TTL (Time To Live)
    |--------------------------------------------------------------------------
    |
    | This value is the default time in seconds that cache entries will persist.
    | If no TTL is specified in the attribute, this value will be used.
    |
    */
    'default_ttl' => env('CACHABLE_METHODS_TTL', 3600),

    /*
    |--------------------------------------------------------------------------
    | Cache Store
    |--------------------------------------------------------------------------
    |
    | This option controls which cache store to use for attribute-based caching.
    | It can be any store configured in your cache.php configuration file.
    | Set to null to use the default cache store.
    |
    */
    'store' => env('CACHABLE_METHODS_STORE', null),

    /*
    |--------------------------------------------------------------------------
    | Skip Cache Flag
    |--------------------------------------------------------------------------
    |
    | This option controls the name of the flag that can be passed to methods
    | to skip the cache for a specific method call.
    |
    */
    'skip_cache_flag' => 'skip_cache',

    /*
    |--------------------------------------------------------------------------
    | Cache Key Prefix
    |--------------------------------------------------------------------------
    |
    | This prefix will be prepended to all cache keys generated by this package.
    | Useful to avoid collisions with other cache entries in your application.
    |
    */
    'key_prefix' => 'cachable_',
]; 